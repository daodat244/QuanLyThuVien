/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.ChucNang;

import Control.SuKienDAO;
import Control.NhaXuatBanDAO;
import Model.NhaXuatBan;
import Model.SuKien;
import java.awt.Component;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

import java.time.LocalDate;
import java.time.LocalTime;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;

import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class PanelSuKien extends javax.swing.JPanel {

    private final SuKienDAO suKienDAO = new SuKienDAO();
    private final NhaXuatBanDAO nxbDAO = new NhaXuatBanDAO();
    public PanelSuKien() {
        initComponents();
        loadComboBoxes();
        loadTableData();
        txtDateTimeSuKien.setEditable(false);       
        timeSuKien.addTimeChangeListener(e -> updateTxtDateTimeSuKien());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTenSuKien = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        calendarSuKien = new com.github.lgooddatepicker.components.CalendarPanel();
        timeSuKien = new com.github.lgooddatepicker.components.TimePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtDateTimeSuKien = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTaSuKien = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbNXB = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnthemSuKien = new javax.swing.JButton();
        btnsuaSuKien = new javax.swing.JButton();
        btnxoaSuKien = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSuKien = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(1120, 666));
        setMinimumSize(new java.awt.Dimension(1120, 666));
        setPreferredSize(new java.awt.Dimension(1120, 666));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setText("Tên sự kiện");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        txtTenSuKien.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thời gian tổ chức sự kiện", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        jLabel1.setText("Ngày tổ chức");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jLabel3.setText("Giờ tổ chức");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtDateTimeSuKien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateTimeSuKienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendarSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtDateTimeSuKien)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(timeSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendarSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(timeSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(txtDateTimeSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txtMoTaSuKien.setColumns(20);
        txtMoTaSuKien.setLineWrap(true);
        txtMoTaSuKien.setRows(5);
        txtMoTaSuKien.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtMoTaSuKien);

        jLabel4.setText("Mô tả sự kiện");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jLabel6.setText("Nhà tài trợ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTenSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(cbNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenSuKien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbNXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setText("Nhập dữ liệu");
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jButton2.setText("Xuất dữ liệu");
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Các chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 13))); // NOI18N

        btnthemSuKien.setText("Thêm sự kiện");
        btnthemSuKien.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnthemSuKien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemSuKienActionPerformed(evt);
            }
        });

        btnsuaSuKien.setText("Sửa sự kiện");
        btnsuaSuKien.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnsuaSuKien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaSuKienActionPerformed(evt);
            }
        });

        btnxoaSuKien.setText("Xóa sự kiện");
        btnxoaSuKien.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnxoaSuKien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaSuKienActionPerformed(evt);
            }
        });

        jLabel5.setText("Tìm kiếm");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextField2.setText("(Tên sự kiện)");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                    .addComponent(jLabel5)
                    .addComponent(btnsuaSuKien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnthemSuKien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnxoaSuKien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnthemSuKien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsuaSuKien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnxoaSuKien)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tableSuKien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sự kiện", "Tên sự kiện", "NXB tài trợ", "Thời gian tổ chức", "Mô tả sự kiện"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSuKien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSuKienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableSuKien);
        if (tableSuKien.getColumnModel().getColumnCount() > 0) {
            tableSuKien.getColumnModel().getColumn(0).setResizable(false);
            tableSuKien.getColumnModel().getColumn(0).setPreferredWidth(5);
            tableSuKien.getColumnModel().getColumn(1).setResizable(false);
            tableSuKien.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableSuKien.getColumnModel().getColumn(2).setResizable(false);
            tableSuKien.getColumnModel().getColumn(2).setPreferredWidth(200);
            tableSuKien.getColumnModel().getColumn(3).setResizable(false);
            tableSuKien.getColumnModel().getColumn(3).setPreferredWidth(100);
            tableSuKien.getColumnModel().getColumn(4).setResizable(false);
            tableSuKien.getColumnModel().getColumn(4).setPreferredWidth(200);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnthemSuKienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemSuKienActionPerformed
        // TODO add your handling code here:
        addSuKien();
    }//GEN-LAST:event_btnthemSuKienActionPerformed

    private void btnsuaSuKienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaSuKienActionPerformed
        updateSuKien();
    }//GEN-LAST:event_btnsuaSuKienActionPerformed

    private void btnxoaSuKienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaSuKienActionPerformed
        deleteSuKien();
    }//GEN-LAST:event_btnxoaSuKienActionPerformed

    private void tableSuKienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSuKienMouseClicked
        // TODO add your handling code here:
        int row = tableSuKien.getSelectedRow();
                if (row >= 0) {
                    txtTenSuKien.setText(tableSuKien.getValueAt(row, 1).toString());
                    txtDateTimeSuKien.setText(tableSuKien.getValueAt(row, 3).toString());
                    txtMoTaSuKien.setText(tableSuKien.getValueAt(row, 4).toString());
                    int manxb = Integer.parseInt(tableSuKien.getValueAt(row, 2).toString());
                    
                    for (int i = 0; i < cbNXB.getItemCount(); i++) {
                    if (cbNXB.getItemAt(i).getManxb() == manxb) {
                        cbNXB.setSelectedIndex(i);
                        break;
                    }
                }
                }
    }//GEN-LAST:event_tableSuKienMouseClicked

    private void txtDateTimeSuKienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateTimeSuKienActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtDateTimeSuKienActionPerformed
        
    private void updateTxtDateTimeSuKien() {
    try {
        LocalDate selectedDate = calendarSuKien.getSelectedDate(); // đã là LocalDate
        LocalTime selectedTime = timeSuKien.getTime();

        if (selectedDate != null && selectedTime != null) {
            LocalDateTime dateTime = LocalDateTime.of(selectedDate, selectedTime); // không cần chuyển đổi gì thêm
            String formatted = dateTime.format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"));
            txtDateTimeSuKien.setText(formatted);
        }
    } catch (Exception e) {
        txtDateTimeSuKien.setText(""); // Nếu lỗi thì xóa nội dung
    }
}

        private void loadComboBoxes() {
        try {
            // Tải Nhà Xuất Bản
            List<NhaXuatBan> nxbList = nxbDAO.getAllNhaXuatBan();
            for (NhaXuatBan nxb : nxbList) {
                cbNXB.addItem(nxb);
            }
            cbNXB.setRenderer(new DefaultListCellRenderer() {
                @Override
                public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                    super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    if (value instanceof NhaXuatBan) {
                        NhaXuatBan nxb = (NhaXuatBan) value;
                        setText(nxb.getTennxb());
                    }
                    return this;
                }
            });
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadTableData() {
        try {
            List<SuKien> skList = suKienDAO.getAllSuKien();
            DefaultTableModel model = (DefaultTableModel) tableSuKien.getModel();
            model.setRowCount(0); // Xóa dữ liệu cũ
            // Định dạng LocalDateTime
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
            for (SuKien suKien : skList) {
                String tenNXB = "";
                    for (int i = 0; i < cbNXB.getItemCount(); i++) {
                    if (cbNXB.getItemAt(i).getManxb() == suKien.getManxb()) {
                        tenNXB = cbNXB.getItemAt(i).getTennxb();
                        break;
                    }
                }
                String formattedDateTime = suKien.getTgiantochuc() != null ? suKien.getTgiantochuc().format(formatter) : "";
                model.addRow(new Object[]{
                    suKien.getMasukien(),
                    suKien.getTensukien(),
                    tenNXB,
                    formattedDateTime,
                    suKien.getMota()
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
    

    private void addSuKien() {
        try {
            // Tạo đối tượng SuKien
            SuKien suKien = new SuKien();
            suKien.setTensukien(txtTenSuKien.getText().trim());
            suKien.setMota(txtMoTaSuKien.getText().trim());

            // Lấy ngày và giờ từ DatePicker và TimePicker
            LocalDate selectedDate = calendarSuKien.getSelectedDate();
            LocalTime selectedTime = timeSuKien.getTime();

            // Kiểm tra dữ liệu đầu vào
            if (selectedDate == null || selectedTime == null || suKien.getTensukien().isEmpty() || suKien.getMota().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ: tên, mô tả, ngày và giờ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kiểm tra nhà xuất bản được chọn
            NhaXuatBan selectedNXB = (NhaXuatBan) cbNXB.getSelectedItem();
            if (selectedNXB == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhà xuất bản!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kết hợp ngày và giờ thành LocalDateTime
            LocalDateTime dateTime = LocalDateTime.of(selectedDate, selectedTime);
            suKien.setTgiantochuc(dateTime);

            // Gán manxb từ nhà xuất bản được chọn
            suKien.setManxb(selectedNXB.getManxb());

            // Định dạng để hiển thị trên txtDateTimeSuKien
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
            String formattedDateTime = dateTime.format(formatter);
            txtDateTimeSuKien.setText(formattedDateTime);

            // Thêm vào cơ sở dữ liệu
            if (suKienDAO.themSuKien(suKien)) {
                JOptionPane.showMessageDialog(this, "Thêm sự kiện thành công!");
                // Thêm vào bảng
                DefaultTableModel model = (DefaultTableModel) tableSuKien.getModel();
                model.addRow(new Object[] {
                    suKien.getMasukien(), // Lấy từ cơ sở dữ liệu nếu có RETURN_GENERATED_KEYS
                    suKien.getTensukien(),
                    selectedNXB.getTennxb(), // Hiển thị tên nhà xuất bản
                    formattedDateTime,
                    suKien.getMota()
                });
                loadTableData(); // Tải lại dữ liệu bảng
                clearFields();  // Xóa các trường nhập liệu
            } else {
                JOptionPane.showMessageDialog(this, "Thêm sự kiện thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm sự kiện: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void updateSuKien() {
        int row = tableSuKien.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sự kiện để sửa!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Tạo đối tượng SuKien
            SuKien suKien = new SuKien();
            suKien.setMasukien(Integer.parseInt(tableSuKien.getValueAt(row, 0).toString()));
            suKien.setTensukien(txtTenSuKien.getText().trim());
            suKien.setMota(txtMoTaSuKien.getText().trim());

            // Lấy ngày và giờ từ DatePicker và TimePicker
            LocalDate selectedDate = calendarSuKien.getSelectedDate();
            LocalTime selectedTime = timeSuKien.getTime();

            // Kiểm tra dữ liệu đầu vào
            if (selectedDate == null || selectedTime == null || suKien.getTensukien().isEmpty() || suKien.getMota().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ: tên, mô tả, ngày và giờ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kiểm tra nhà xuất bản được chọn
            NhaXuatBan selectedNXB = (NhaXuatBan) cbNXB.getSelectedItem();
            if (selectedNXB == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhà xuất bản!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kết hợp ngày và giờ thành LocalDateTime
            LocalDateTime dateTime = LocalDateTime.of(selectedDate, selectedTime);
            suKien.setTgiantochuc(dateTime);

            // Gán manxb từ nhà xuất bản được chọn
            suKien.setManxb(selectedNXB.getManxb());

            // Định dạng để hiển thị trên txtDateTimeSuKien
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
            String formattedDateTime = dateTime.format(formatter);
            txtDateTimeSuKien.setText(formattedDateTime);

            if (suKienDAO.updateSuKien(suKien)) {
                JOptionPane.showMessageDialog(this, "Sửa sự kiện thành công!");
                loadTableData();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Sửa sự kiện thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi sửa sự kiện: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deleteSuKien() {
        int row = tableSuKien.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sự kiện để xóa!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa sự kiện này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                int masukien = Integer.parseInt(tableSuKien.getValueAt(row, 0).toString());
                if (suKienDAO.deleteSuKien(masukien)) {
                    JOptionPane.showMessageDialog(this, "Xóa sự kiện thành công!");
                    loadTableData();
                    clearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa sự kiện thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xóa sự kiện: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

private void clearFields() {
        txtTenSuKien.setText("");
        txtDateTimeSuKien.setText("");
        txtMoTaSuKien.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsuaSuKien;
    private javax.swing.JButton btnthemSuKien;
    private javax.swing.JButton btnxoaSuKien;
    private com.github.lgooddatepicker.components.CalendarPanel calendarSuKien;
    private javax.swing.JComboBox<NhaXuatBan> cbNXB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tableSuKien;
    private com.github.lgooddatepicker.components.TimePicker timeSuKien;
    private javax.swing.JTextField txtDateTimeSuKien;
    private javax.swing.JTextArea txtMoTaSuKien;
    private javax.swing.JTextField txtTenSuKien;
    // End of variables declaration//GEN-END:variables
}
